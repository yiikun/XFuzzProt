// Verilated -*- C++ -*-
// DESCRIPTION: Verilator output: Design internal header
// See VVerifyTop.h for the primary calling header

#ifndef VERILATED_VVERIFYTOP_MSHRCTL_H_
#define VERILATED_VVERIFYTOP_MSHRCTL_H_  // guard

#include "verilated.h"
class VVerifyTop_MSHR;


class VVerifyTop__Syms;

class alignas(VL_CACHE_LINE_BYTES) VVerifyTop_MSHRCtl final : public VerilatedModule {
  public:
    // CELLS
    VVerifyTop_MSHR* __PVT__mshrs_0;
    VVerifyTop_MSHR* __PVT__mshrs_1;
    VVerifyTop_MSHR* __PVT__mshrs_2;
    VVerifyTop_MSHR* __PVT__mshrs_3;

    // DESIGN SPECIFIC STATE
    // Anonymous structures to workaround compiler member-count bugs
    struct {
        VL_IN8(clock,0,0);
        VL_IN8(reset,0,0);
        VL_OUT8(io_toReqArb_blockA_s1,0,0);
        VL_OUT8(io_toReqArb_blockB_s1,0,0);
        VL_IN8(io_fromMainPipe_mshr_alloc_s3_valid,0,0);
        VL_IN8(io_fromMainPipe_mshr_alloc_s3_bits_dirResult_hit,0,0);
        VL_IN8(io_fromMainPipe_mshr_alloc_s3_bits_dirResult_tag,2,0);
        VL_IN8(io_fromMainPipe_mshr_alloc_s3_bits_dirResult_set,0,0);
        VL_IN8(io_fromMainPipe_mshr_alloc_s3_bits_dirResult_way,0,0);
        VL_IN8(io_fromMainPipe_mshr_alloc_s3_bits_dirResult_meta_dirty,0,0);
        VL_IN8(io_fromMainPipe_mshr_alloc_s3_bits_dirResult_meta_state,1,0);
        VL_IN8(io_fromMainPipe_mshr_alloc_s3_bits_dirResult_meta_clients,0,0);
        VL_IN8(io_fromMainPipe_mshr_alloc_s3_bits_dirResult_meta_alias,1,0);
        VL_IN8(io_fromMainPipe_mshr_alloc_s3_bits_dirResult_meta_prefetch,0,0);
        VL_IN8(io_fromMainPipe_mshr_alloc_s3_bits_dirResult_meta_accessed,0,0);
        VL_IN8(io_fromMainPipe_mshr_alloc_s3_bits_state_s_acquire,0,0);
        VL_IN8(io_fromMainPipe_mshr_alloc_s3_bits_state_s_rprobe,0,0);
        VL_IN8(io_fromMainPipe_mshr_alloc_s3_bits_state_s_pprobe,0,0);
        VL_IN8(io_fromMainPipe_mshr_alloc_s3_bits_state_s_probeack,0,0);
        VL_IN8(io_fromMainPipe_mshr_alloc_s3_bits_state_s_refill,0,0);
        VL_IN8(io_fromMainPipe_mshr_alloc_s3_bits_state_w_rprobeackfirst,0,0);
        VL_IN8(io_fromMainPipe_mshr_alloc_s3_bits_state_w_rprobeacklast,0,0);
        VL_IN8(io_fromMainPipe_mshr_alloc_s3_bits_state_w_pprobeackfirst,0,0);
        VL_IN8(io_fromMainPipe_mshr_alloc_s3_bits_state_w_pprobeacklast,0,0);
        VL_IN8(io_fromMainPipe_mshr_alloc_s3_bits_state_w_pprobeack,0,0);
        VL_IN8(io_fromMainPipe_mshr_alloc_s3_bits_state_w_grantfirst,0,0);
        VL_IN8(io_fromMainPipe_mshr_alloc_s3_bits_state_w_grantlast,0,0);
        VL_IN8(io_fromMainPipe_mshr_alloc_s3_bits_state_w_grant,0,0);
        VL_IN8(io_fromMainPipe_mshr_alloc_s3_bits_state_w_replResp,0,0);
        VL_IN8(io_fromMainPipe_mshr_alloc_s3_bits_task_channel,2,0);
        VL_IN8(io_fromMainPipe_mshr_alloc_s3_bits_task_set,0,0);
        VL_IN8(io_fromMainPipe_mshr_alloc_s3_bits_task_tag,2,0);
        VL_IN8(io_fromMainPipe_mshr_alloc_s3_bits_task_off,0,0);
        VL_IN8(io_fromMainPipe_mshr_alloc_s3_bits_task_alias,1,0);
        VL_IN8(io_fromMainPipe_mshr_alloc_s3_bits_task_opcode,2,0);
        VL_IN8(io_fromMainPipe_mshr_alloc_s3_bits_task_param,2,0);
        VL_IN8(io_fromMainPipe_mshr_alloc_s3_bits_task_size,2,0);
        VL_IN8(io_fromMainPipe_mshr_alloc_s3_bits_task_sourceId,4,0);
        VL_IN8(io_fromMainPipe_mshr_alloc_s3_bits_task_needProbeAckData,0,0);
        VL_IN8(io_fromMainPipe_mshr_alloc_s3_bits_task_aliasTask,0,0);
        VL_IN8(io_fromMainPipe_mshr_alloc_s3_bits_task_fromL2pft,0,0);
        VL_IN8(io_fromMainPipe_mshr_alloc_s3_bits_task_reqSource,3,0);
        VL_OUT8(io_toMainPipe_mshr_alloc_ptr,7,0);
        VL_IN8(io_mshrTask_ready,0,0);
        VL_OUT8(io_mshrTask_valid,0,0);
        VL_OUT8(io_mshrTask_bits_channel,2,0);
        VL_OUT8(io_mshrTask_bits_set,0,0);
        VL_OUT8(io_mshrTask_bits_tag,2,0);
        VL_OUT8(io_mshrTask_bits_off,0,0);
        VL_OUT8(io_mshrTask_bits_alias,1,0);
        VL_OUT8(io_mshrTask_bits_opcode,2,0);
        VL_OUT8(io_mshrTask_bits_param,2,0);
        VL_OUT8(io_mshrTask_bits_sourceId,4,0);
        VL_OUT8(io_mshrTask_bits_mshrTask,0,0);
        VL_OUT8(io_mshrTask_bits_mshrId,7,0);
        VL_OUT8(io_mshrTask_bits_aliasTask,0,0);
        VL_OUT8(io_mshrTask_bits_useProbeData,0,0);
        VL_OUT8(io_mshrTask_bits_mshrRetry,0,0);
        VL_OUT8(io_mshrTask_bits_fromL2pft,0,0);
        VL_OUT8(io_mshrTask_bits_dirty,0,0);
        VL_OUT8(io_mshrTask_bits_way,0,0);
        VL_OUT8(io_mshrTask_bits_meta_dirty,0,0);
        VL_OUT8(io_mshrTask_bits_meta_state,1,0);
        VL_OUT8(io_mshrTask_bits_meta_clients,0,0);
    };
    struct {
        VL_OUT8(io_mshrTask_bits_meta_alias,1,0);
        VL_OUT8(io_mshrTask_bits_meta_prefetch,0,0);
        VL_OUT8(io_mshrTask_bits_meta_prefetchSrc,2,0);
        VL_OUT8(io_mshrTask_bits_meta_accessed,0,0);
        VL_OUT8(io_mshrTask_bits_metaWen,0,0);
        VL_OUT8(io_mshrTask_bits_tagWen,0,0);
        VL_OUT8(io_mshrTask_bits_dsWen,0,0);
        VL_OUT8(io_mshrTask_bits_replTask,0,0);
        VL_OUT8(io_mshrTask_bits_reqSource,3,0);
        VL_OUT8(io_mshrTask_bits_mergeA,0,0);
        VL_OUT8(io_mshrTask_bits_aMergeTask_off,0,0);
        VL_OUT8(io_mshrTask_bits_aMergeTask_alias,1,0);
        VL_OUT8(io_mshrTask_bits_aMergeTask_opcode,2,0);
        VL_OUT8(io_mshrTask_bits_aMergeTask_param,2,0);
        VL_OUT8(io_mshrTask_bits_aMergeTask_sourceId,4,0);
        VL_OUT8(io_mshrTask_bits_aMergeTask_meta_dirty,0,0);
        VL_OUT8(io_mshrTask_bits_aMergeTask_meta_state,1,0);
        VL_OUT8(io_mshrTask_bits_aMergeTask_meta_clients,0,0);
        VL_OUT8(io_mshrTask_bits_aMergeTask_meta_alias,1,0);
        VL_OUT8(io_mshrTask_bits_aMergeTask_meta_accessed,0,0);
        VL_IN8(io_sourceA_ready,0,0);
        VL_OUT8(io_sourceA_valid,0,0);
        VL_OUT8(io_sourceA_bits_opcode,2,0);
        VL_OUT8(io_sourceA_bits_param,2,0);
        VL_OUT8(io_sourceA_bits_size,0,0);
        VL_OUT8(io_sourceA_bits_source,7,0);
        VL_OUT8(io_sourceA_bits_address,4,0);
        VL_OUT8(io_sourceA_bits_mask,0,0);
        VL_OUT8(io_sourceA_bits_data,7,0);
        VL_OUT8(io_sourceA_bits_corrupt,0,0);
        VL_IN8(io_sourceB_ready,0,0);
        VL_OUT8(io_sourceB_valid,0,0);
        VL_OUT8(io_sourceB_bits_opcode,2,0);
        VL_OUT8(io_sourceB_bits_param,1,0);
        VL_OUT8(io_sourceB_bits_address,4,0);
        VL_OUT8(io_sourceB_bits_data,7,0);
        VL_IN8(io_grantStatus_0_valid,0,0);
        VL_IN8(io_grantStatus_0_set,0,0);
        VL_IN8(io_grantStatus_0_tag,2,0);
        VL_IN8(io_grantStatus_1_valid,0,0);
        VL_IN8(io_grantStatus_1_set,0,0);
        VL_IN8(io_grantStatus_1_tag,2,0);
        VL_IN8(io_grantStatus_2_valid,0,0);
        VL_IN8(io_grantStatus_2_set,0,0);
        VL_IN8(io_grantStatus_2_tag,2,0);
        VL_IN8(io_grantStatus_3_valid,0,0);
        VL_IN8(io_grantStatus_3_set,0,0);
        VL_IN8(io_grantStatus_3_tag,2,0);
        VL_IN8(io_resps_sinkC_valid,0,0);
        VL_IN8(io_resps_sinkC_set,0,0);
        VL_IN8(io_resps_sinkC_tag,2,0);
        VL_IN8(io_resps_sinkC_respInfo_opcode,2,0);
        VL_IN8(io_resps_sinkC_respInfo_param,2,0);
        VL_IN8(io_resps_sinkC_respInfo_last,0,0);
        VL_IN8(io_resps_sinkD_valid,0,0);
        VL_IN8(io_resps_sinkD_mshrId,7,0);
        VL_IN8(io_resps_sinkD_respInfo_opcode,2,0);
        VL_IN8(io_resps_sinkD_respInfo_param,2,0);
        VL_IN8(io_resps_sinkD_respInfo_last,0,0);
        VL_OUT8(io_releaseBufWriteId,7,0);
        VL_IN8(io_nestedwb_set,0,0);
        VL_IN8(io_nestedwb_tag,2,0);
        VL_IN8(io_nestedwb_c_set_dirty,0,0);
        VL_OUT8(io_nestedwbDataId_valid,0,0);
    };
    struct {
        VL_OUT8(io_nestedwbDataId_bits,7,0);
        VL_IN8(io_pipeStatusVec_0_valid,0,0);
        VL_IN8(io_pipeStatusVec_1_valid,0,0);
        VL_OUT8(io_msInfo_0_valid,0,0);
        VL_OUT8(io_msInfo_0_bits_channel,2,0);
        VL_OUT8(io_msInfo_0_bits_set,0,0);
        VL_OUT8(io_msInfo_0_bits_way,0,0);
        VL_OUT8(io_msInfo_0_bits_reqTag,2,0);
        VL_OUT8(io_msInfo_0_bits_willFree,0,0);
        VL_OUT8(io_msInfo_0_bits_aliasTask,0,0);
        VL_OUT8(io_msInfo_0_bits_needRelease,0,0);
        VL_OUT8(io_msInfo_0_bits_blockRefill,0,0);
        VL_OUT8(io_msInfo_0_bits_metaTag,2,0);
        VL_OUT8(io_msInfo_0_bits_metaState,1,0);
        VL_OUT8(io_msInfo_0_bits_dirHit,0,0);
        VL_OUT8(io_msInfo_0_bits_isAcqOrPrefetch,0,0);
        VL_OUT8(io_msInfo_0_bits_isPrefetch,0,0);
        VL_OUT8(io_msInfo_0_bits_param,2,0);
        VL_OUT8(io_msInfo_0_bits_mergeA,0,0);
        VL_OUT8(io_msInfo_0_bits_w_grantfirst,0,0);
        VL_OUT8(io_msInfo_0_bits_s_refill,0,0);
        VL_OUT8(io_msInfo_0_bits_w_releaseack,0,0);
        VL_OUT8(io_msInfo_0_bits_w_replResp,0,0);
        VL_OUT8(io_msInfo_0_bits_w_rprobeacklast,0,0);
        VL_OUT8(io_msInfo_1_valid,0,0);
        VL_OUT8(io_msInfo_1_bits_channel,2,0);
        VL_OUT8(io_msInfo_1_bits_set,0,0);
        VL_OUT8(io_msInfo_1_bits_way,0,0);
        VL_OUT8(io_msInfo_1_bits_reqTag,2,0);
        VL_OUT8(io_msInfo_1_bits_willFree,0,0);
        VL_OUT8(io_msInfo_1_bits_aliasTask,0,0);
        VL_OUT8(io_msInfo_1_bits_needRelease,0,0);
        VL_OUT8(io_msInfo_1_bits_blockRefill,0,0);
        VL_OUT8(io_msInfo_1_bits_metaTag,2,0);
        VL_OUT8(io_msInfo_1_bits_metaState,1,0);
        VL_OUT8(io_msInfo_1_bits_dirHit,0,0);
        VL_OUT8(io_msInfo_1_bits_isAcqOrPrefetch,0,0);
        VL_OUT8(io_msInfo_1_bits_isPrefetch,0,0);
        VL_OUT8(io_msInfo_1_bits_param,2,0);
        VL_OUT8(io_msInfo_1_bits_mergeA,0,0);
        VL_OUT8(io_msInfo_1_bits_w_grantfirst,0,0);
        VL_OUT8(io_msInfo_1_bits_s_refill,0,0);
        VL_OUT8(io_msInfo_1_bits_w_releaseack,0,0);
        VL_OUT8(io_msInfo_1_bits_w_replResp,0,0);
        VL_OUT8(io_msInfo_1_bits_w_rprobeacklast,0,0);
        VL_OUT8(io_msInfo_2_valid,0,0);
        VL_OUT8(io_msInfo_2_bits_channel,2,0);
        VL_OUT8(io_msInfo_2_bits_set,0,0);
        VL_OUT8(io_msInfo_2_bits_way,0,0);
        VL_OUT8(io_msInfo_2_bits_reqTag,2,0);
        VL_OUT8(io_msInfo_2_bits_willFree,0,0);
        VL_OUT8(io_msInfo_2_bits_aliasTask,0,0);
        VL_OUT8(io_msInfo_2_bits_needRelease,0,0);
        VL_OUT8(io_msInfo_2_bits_blockRefill,0,0);
        VL_OUT8(io_msInfo_2_bits_metaTag,2,0);
        VL_OUT8(io_msInfo_2_bits_metaState,1,0);
        VL_OUT8(io_msInfo_2_bits_dirHit,0,0);
        VL_OUT8(io_msInfo_2_bits_isAcqOrPrefetch,0,0);
        VL_OUT8(io_msInfo_2_bits_isPrefetch,0,0);
        VL_OUT8(io_msInfo_2_bits_param,2,0);
        VL_OUT8(io_msInfo_2_bits_mergeA,0,0);
        VL_OUT8(io_msInfo_2_bits_w_grantfirst,0,0);
        VL_OUT8(io_msInfo_2_bits_s_refill,0,0);
        VL_OUT8(io_msInfo_2_bits_w_releaseack,0,0);
    };
    struct {
        VL_OUT8(io_msInfo_2_bits_w_replResp,0,0);
        VL_OUT8(io_msInfo_2_bits_w_rprobeacklast,0,0);
        VL_OUT8(io_msInfo_3_valid,0,0);
        VL_OUT8(io_msInfo_3_bits_channel,2,0);
        VL_OUT8(io_msInfo_3_bits_set,0,0);
        VL_OUT8(io_msInfo_3_bits_way,0,0);
        VL_OUT8(io_msInfo_3_bits_reqTag,2,0);
        VL_OUT8(io_msInfo_3_bits_willFree,0,0);
        VL_OUT8(io_msInfo_3_bits_aliasTask,0,0);
        VL_OUT8(io_msInfo_3_bits_needRelease,0,0);
        VL_OUT8(io_msInfo_3_bits_blockRefill,0,0);
        VL_OUT8(io_msInfo_3_bits_metaTag,2,0);
        VL_OUT8(io_msInfo_3_bits_metaState,1,0);
        VL_OUT8(io_msInfo_3_bits_dirHit,0,0);
        VL_OUT8(io_msInfo_3_bits_isAcqOrPrefetch,0,0);
        VL_OUT8(io_msInfo_3_bits_isPrefetch,0,0);
        VL_OUT8(io_msInfo_3_bits_param,2,0);
        VL_OUT8(io_msInfo_3_bits_mergeA,0,0);
        VL_OUT8(io_msInfo_3_bits_w_grantfirst,0,0);
        VL_OUT8(io_msInfo_3_bits_s_refill,0,0);
        VL_OUT8(io_msInfo_3_bits_w_releaseack,0,0);
        VL_OUT8(io_msInfo_3_bits_w_replResp,0,0);
        VL_OUT8(io_msInfo_3_bits_w_rprobeacklast,0,0);
        VL_IN8(io_aMergeTask_valid,0,0);
        VL_IN8(io_aMergeTask_bits_id,7,0);
        VL_IN8(io_aMergeTask_bits_task_off,0,0);
        VL_IN8(io_aMergeTask_bits_task_alias,1,0);
        VL_IN8(io_aMergeTask_bits_task_opcode,2,0);
        VL_IN8(io_aMergeTask_bits_task_param,2,0);
        VL_IN8(io_aMergeTask_bits_task_sourceId,4,0);
        VL_IN8(io_replResp_valid,0,0);
        VL_IN8(io_replResp_bits_tag,2,0);
        VL_IN8(io_replResp_bits_way,0,0);
        VL_IN8(io_replResp_bits_meta_dirty,0,0);
        VL_IN8(io_replResp_bits_meta_state,1,0);
        VL_IN8(io_replResp_bits_meta_clients,0,0);
        VL_IN8(io_replResp_bits_meta_alias,1,0);
        VL_IN8(io_replResp_bits_meta_prefetch,0,0);
        VL_IN8(io_replResp_bits_meta_accessed,0,0);
        VL_IN8(io_replResp_bits_mshrId,7,0);
        VL_IN8(io_replResp_bits_retry,0,0);
        VL_OUT8(io_msStatus_0_valid,0,0);
        VL_OUT8(io_msStatus_0_bits_channel,2,0);
        VL_OUT8(io_msStatus_0_bits_set,0,0);
        VL_OUT8(io_msStatus_0_bits_reqTag,2,0);
        VL_OUT8(io_msStatus_0_bits_is_miss,0,0);
        VL_OUT8(io_msStatus_0_bits_is_prefetch,0,0);
        VL_OUT8(io_msStatus_1_valid,0,0);
        VL_OUT8(io_msStatus_1_bits_channel,2,0);
        VL_OUT8(io_msStatus_1_bits_set,0,0);
        VL_OUT8(io_msStatus_1_bits_reqTag,2,0);
        VL_OUT8(io_msStatus_1_bits_is_miss,0,0);
        VL_OUT8(io_msStatus_1_bits_is_prefetch,0,0);
        VL_OUT8(io_msStatus_2_valid,0,0);
        VL_OUT8(io_msStatus_2_bits_channel,2,0);
        VL_OUT8(io_msStatus_2_bits_set,0,0);
        VL_OUT8(io_msStatus_2_bits_reqTag,2,0);
        VL_OUT8(io_msStatus_2_bits_is_miss,0,0);
        VL_OUT8(io_msStatus_2_bits_is_prefetch,0,0);
        VL_OUT8(io_msStatus_3_valid,0,0);
        VL_OUT8(io_msStatus_3_bits_channel,2,0);
        VL_OUT8(io_msStatus_3_bits_set,0,0);
        VL_OUT8(io_msStatus_3_bits_reqTag,2,0);
        VL_OUT8(io_msStatus_3_bits_is_miss,0,0);
    };
    struct {
        VL_OUT8(io_msStatus_3_bits_is_prefetch,0,0);
        CData/*0:0*/ __PVT__mshrs_0_io_alloc_valid;
        CData/*0:0*/ __PVT__mshrs_0_io_resps_sink_d_valid;
        CData/*0:0*/ __PVT__mshrs_0_io_aMergeTask_valid;
        CData/*0:0*/ __PVT__mshrs_0_io_replResp_valid;
        CData/*0:0*/ __PVT__mshrs_1_io_alloc_valid;
        CData/*0:0*/ __PVT__mshrs_1_io_resps_sink_d_valid;
        CData/*0:0*/ __PVT__mshrs_1_io_aMergeTask_valid;
        CData/*0:0*/ __PVT__mshrs_1_io_replResp_valid;
        CData/*0:0*/ __PVT__mshrs_2_io_alloc_valid;
        CData/*0:0*/ __PVT__mshrs_2_io_resps_sink_d_valid;
        CData/*0:0*/ __PVT__mshrs_2_io_aMergeTask_valid;
        CData/*0:0*/ __PVT__mshrs_2_io_replResp_valid;
        CData/*0:0*/ __PVT__mshrs_3_io_alloc_valid;
        CData/*0:0*/ __PVT__mshrs_3_io_resps_sink_d_valid;
        CData/*0:0*/ __PVT__mshrs_3_io_aMergeTask_valid;
        CData/*0:0*/ __PVT__mshrs_3_io_replResp_valid;
        CData/*3:0*/ __PVT__mshrSelector_io_out_bits;
        CData/*0:0*/ __PVT__sourceB_io_task_ready;
        CData/*0:0*/ __PVT__mshr_task_arb_io_in_0_ready;
        CData/*0:0*/ __PVT__mshr_task_arb_io_in_1_ready;
        CData/*0:0*/ __PVT__mshr_task_arb_io_in_2_ready;
        CData/*0:0*/ __PVT__mshr_task_arb_io_in_3_ready;
        CData/*0:0*/ __PVT__helper_clean;
        CData/*0:0*/ __PVT__helper_dump;
        CData/*0:0*/ __PVT__helper_1_clean;
        CData/*0:0*/ __PVT__helper_1_dump;
        CData/*0:0*/ __PVT__helper_2_clean;
        CData/*0:0*/ __PVT__helper_2_dump;
        CData/*0:0*/ __PVT__helper_3_clean;
        CData/*0:0*/ __PVT__helper_3_dump;
        CData/*0:0*/ __PVT__helper_4_clean;
        CData/*0:0*/ __PVT__helper_4_dump;
        CData/*0:0*/ __PVT__helper_5_clean;
        CData/*0:0*/ __PVT__helper_5_dump;
        CData/*2:0*/ __PVT___mshrFull_T_1;
        CData/*0:0*/ __PVT__acquire_period_en;
        CData/*0:0*/ __PVT__release_period_en;
        CData/*3:0*/ __PVT__source_a_arb__DOT__valids;
        CData/*3:0*/ __PVT__source_a_arb__DOT__rrGrantMask;
        CData/*3:0*/ __PVT__source_a_arb__DOT__pendingMask;
        CData/*3:0*/ __PVT__source_a_arb__DOT__rrSelOH;
        CData/*3:0*/ __PVT__source_a_arb__DOT__chosenOH;
        CData/*0:0*/ __PVT__source_a_arb__DOT___pendingMask_T_2;
        CData/*0:0*/ __PVT__sourceB__DOT__helper_clean;
        CData/*0:0*/ __PVT__sourceB__DOT__helper_dump;
        CData/*0:0*/ __PVT__sourceB__DOT__helper_1_clean;
        CData/*0:0*/ __PVT__sourceB__DOT__helper_1_dump;
        CData/*0:0*/ __PVT__sourceB__DOT__helper_2_clean;
        CData/*0:0*/ __PVT__sourceB__DOT__helper_2_dump;
        CData/*0:0*/ __PVT__sourceB__DOT__helper_3_clean;
        CData/*0:0*/ __PVT__sourceB__DOT__helper_3_dump;
        CData/*0:0*/ __PVT__sourceB__DOT__probes_0_valid;
        CData/*0:0*/ __PVT__sourceB__DOT__probes_1_valid;
        CData/*0:0*/ __PVT__sourceB__DOT__probes_2_valid;
        CData/*0:0*/ __PVT__sourceB__DOT__probes_3_valid;
        CData/*0:0*/ __PVT__sourceB__DOT__conflictMask_0;
        CData/*0:0*/ __PVT__sourceB__DOT__conflictMask_1;
        CData/*0:0*/ __PVT__sourceB__DOT__conflictMask_2;
        CData/*0:0*/ __PVT__sourceB__DOT__conflictMask_3;
        CData/*0:0*/ __PVT__sourceB__DOT___GEN_0;
        CData/*0:0*/ __PVT__sourceB__DOT___GEN_1;
        CData/*0:0*/ __PVT__sourceB__DOT___GEN_2;
        CData/*0:0*/ __PVT__sourceB__DOT___GEN_3;
    };
    struct {
        CData/*2:0*/ __PVT__sourceB__DOT___update_T_4;
        CData/*3:0*/ __PVT__source_b_arb__DOT__valids;
        CData/*3:0*/ __PVT__source_b_arb__DOT__rrGrantMask;
        CData/*3:0*/ __PVT__source_b_arb__DOT__pendingMask;
        CData/*3:0*/ __PVT__source_b_arb__DOT__rrSelOH;
        CData/*3:0*/ __PVT__source_b_arb__DOT__chosenOH;
        CData/*0:0*/ __PVT__source_b_arb__DOT___pendingMask_T_2;
        CData/*3:0*/ __PVT__mshr_task_arb__DOT__valids;
        CData/*3:0*/ __PVT__mshr_task_arb__DOT__rrGrantMask;
        CData/*3:0*/ __PVT__mshr_task_arb__DOT__pendingMask;
        CData/*3:0*/ __PVT__mshr_task_arb__DOT__rrSelOH;
        CData/*3:0*/ __PVT__mshr_task_arb__DOT__chosenOH;
        CData/*0:0*/ __PVT__mshr_task_arb__DOT___pendingMask_T_2;
        QData/*63:0*/ __PVT__helper_timer;
        QData/*63:0*/ __PVT__helper_1_timer;
        QData/*63:0*/ __PVT__helper_2_timer;
        QData/*63:0*/ __PVT__helper_3_timer;
        QData/*63:0*/ __PVT__helper_4_timer;
        QData/*63:0*/ __PVT__helper_5_timer;
        QData/*63:0*/ __PVT__counter;
        QData/*63:0*/ __PVT__next_counter;
        QData/*63:0*/ __PVT__counter_1;
        QData/*63:0*/ __PVT__next_counter_1;
        QData/*63:0*/ __PVT__counter_2;
        QData/*63:0*/ __PVT___counter_T_3;
        QData/*63:0*/ __PVT__counter_3;
        QData/*63:0*/ __PVT___counter_T_5;
        QData/*63:0*/ __PVT__counter_4;
        QData/*63:0*/ __PVT___counter_T_7;
        QData/*63:0*/ __PVT__counter_5;
        QData/*63:0*/ __PVT___counter_T_9;
        QData/*63:0*/ __PVT__acquire_period;
        QData/*63:0*/ __PVT__release_period;
        QData/*63:0*/ __PVT__counter_6;
        QData/*63:0*/ __PVT___counter_T_11;
        QData/*63:0*/ __PVT__counter_7;
        QData/*63:0*/ __PVT___counter_T_13;
        QData/*63:0*/ __PVT__counter_8;
        QData/*63:0*/ __PVT___counter_T_15;
        QData/*63:0*/ __PVT__counter_9;
        QData/*63:0*/ __PVT___counter_T_17;
        QData/*63:0*/ __PVT__counter_10;
        QData/*63:0*/ __PVT___counter_T_19;
        QData/*63:0*/ __PVT__counter_11;
        QData/*63:0*/ __PVT___counter_T_21;
        QData/*63:0*/ __PVT__counter_12;
        QData/*63:0*/ __PVT___counter_T_23;
        QData/*63:0*/ __PVT__counter_13;
        QData/*63:0*/ __PVT___counter_T_25;
        QData/*63:0*/ __PVT__counter_14;
        QData/*63:0*/ __PVT___counter_T_27;
        QData/*63:0*/ __PVT__counter_15;
        QData/*63:0*/ __PVT___counter_T_29;
        QData/*63:0*/ __PVT__counter_16;
        QData/*63:0*/ __PVT___counter_T_31;
        QData/*63:0*/ __PVT__counter_17;
        QData/*63:0*/ __PVT___counter_T_33;
        QData/*63:0*/ __PVT__counter_18;
        QData/*63:0*/ __PVT___counter_T_35;
        QData/*63:0*/ __PVT__counter_19;
        QData/*63:0*/ __PVT___counter_T_37;
        QData/*63:0*/ __PVT__counter_20;
        QData/*63:0*/ __PVT___counter_T_39;
        QData/*63:0*/ __PVT__counter_21;
    };
    struct {
        QData/*63:0*/ __PVT___counter_T_41;
        QData/*63:0*/ __PVT__counter_22;
        QData/*63:0*/ __PVT___counter_T_43;
        QData/*63:0*/ __PVT__counter_23;
        QData/*63:0*/ __PVT___counter_T_45;
        QData/*63:0*/ __PVT__counter_24;
        QData/*63:0*/ __PVT___counter_T_47;
        QData/*63:0*/ __PVT__counter_25;
        QData/*63:0*/ __PVT___counter_T_49;
        QData/*63:0*/ __PVT__counter_26;
        QData/*63:0*/ __PVT___counter_T_51;
        QData/*63:0*/ __PVT__counter_27;
        QData/*63:0*/ __PVT___counter_T_53;
        QData/*63:0*/ __PVT__counter_28;
        QData/*63:0*/ __PVT___counter_T_55;
        QData/*63:0*/ __PVT__counter_29;
        QData/*63:0*/ __PVT___counter_T_57;
        QData/*63:0*/ __PVT__counter_30;
        QData/*63:0*/ __PVT___counter_T_59;
        QData/*63:0*/ __PVT__counter_31;
        QData/*63:0*/ __PVT___counter_T_61;
        QData/*63:0*/ __PVT__counter_32;
        QData/*63:0*/ __PVT___counter_T_63;
        QData/*63:0*/ __PVT__counter_33;
        QData/*63:0*/ __PVT___counter_T_65;
        QData/*63:0*/ __PVT__counter_34;
        QData/*63:0*/ __PVT___counter_T_67;
        QData/*63:0*/ __PVT__counter_35;
        QData/*63:0*/ __PVT___counter_T_69;
        QData/*63:0*/ __PVT__counter_36;
        QData/*63:0*/ __PVT___counter_T_71;
        QData/*63:0*/ __PVT__counter_37;
        QData/*63:0*/ __PVT___counter_T_73;
        QData/*63:0*/ __PVT__counter_38;
        QData/*63:0*/ __PVT___counter_T_75;
        QData/*63:0*/ __PVT__counter_39;
        QData/*63:0*/ __PVT___counter_T_77;
        QData/*63:0*/ __PVT__counter_40;
        QData/*63:0*/ __PVT___counter_T_79;
        QData/*63:0*/ __PVT__counter_41;
        QData/*63:0*/ __PVT___counter_T_81;
        QData/*63:0*/ __PVT__counter_42;
        QData/*63:0*/ __PVT___counter_T_83;
        QData/*63:0*/ __PVT__counter_43;
        QData/*63:0*/ __PVT___counter_T_85;
        QData/*63:0*/ __PVT__counter_44;
        QData/*63:0*/ __PVT___counter_T_87;
        QData/*63:0*/ __PVT__counter_45;
        QData/*63:0*/ __PVT___counter_T_89;
        QData/*63:0*/ __PVT__counter_46;
        QData/*63:0*/ __PVT__counter_47;
        QData/*63:0*/ __PVT__counter_48;
        QData/*63:0*/ __PVT__counter_49;
        QData/*63:0*/ __PVT__counter_50;
        QData/*63:0*/ __PVT__counter_51;
        QData/*63:0*/ __PVT__counter_52;
        QData/*63:0*/ __PVT__counter_53;
        QData/*63:0*/ __PVT__counter_54;
        QData/*63:0*/ __PVT__counter_55;
        QData/*63:0*/ __PVT__counter_56;
        QData/*63:0*/ __PVT__counter_57;
        QData/*63:0*/ __PVT__counter_58;
        QData/*63:0*/ __PVT__counter_59;
        QData/*63:0*/ __PVT__counter_60;
    };
    struct {
        QData/*63:0*/ __PVT__counter_61;
        QData/*63:0*/ __PVT__counter_62;
        QData/*63:0*/ __PVT__counter_63;
        QData/*63:0*/ __PVT__counter_64;
        QData/*63:0*/ __PVT__counter_65;
        QData/*63:0*/ __PVT__sourceB__DOT__helper_timer;
        QData/*63:0*/ __PVT__sourceB__DOT__helper_1_timer;
        QData/*63:0*/ __PVT__sourceB__DOT__helper_2_timer;
        QData/*63:0*/ __PVT__sourceB__DOT__helper_3_timer;
        QData/*63:0*/ __PVT__sourceB__DOT__counter;
        QData/*63:0*/ __PVT__sourceB__DOT__next_counter;
        QData/*63:0*/ __PVT__sourceB__DOT__counter_1;
        QData/*63:0*/ __PVT__sourceB__DOT__next_counter_1;
        QData/*63:0*/ __PVT__sourceB__DOT__counter_2;
        QData/*63:0*/ __PVT__sourceB__DOT__next_counter_2;
        QData/*63:0*/ __PVT__sourceB__DOT__counter_3;
        QData/*63:0*/ __PVT__sourceB__DOT__next_counter_3;
    };

    // INTERNAL VARIABLES
    VVerifyTop__Syms* const vlSymsp;

    // CONSTRUCTORS
    VVerifyTop_MSHRCtl(VVerifyTop__Syms* symsp, const char* v__name);
    ~VVerifyTop_MSHRCtl();
    VL_UNCOPYABLE(VVerifyTop_MSHRCtl);

    // INTERNAL METHODS
    void __Vconfigure(bool first);
};


#endif  // guard
